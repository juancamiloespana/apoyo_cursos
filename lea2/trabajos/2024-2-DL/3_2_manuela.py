# -*- coding: utf-8 -*-
"""Trabajo de DeepLearning parte 2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18FdyTTn4ReSq1HZbhcNtc48poYSR0SK2

#Nombres:
Manuela Blandón

Karen Pérez

#Librerias
"""

###basicas
import pandas as pd
import numpy as np

##### datos y modelos sklearn
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn import metrics

####### redes neuronales

import tensorflow as tf
from tensorflow import keras

####instalar paquete
!pip install keras-tuner

import keras_tuner as kt ### paquete para afinamiento
import seaborn as sns

import joblib

"""#Punto 1"""

ann2=joblib.load('/content/ann2')
y_te=joblib.load('/content/y_te')
X_te=joblib.load('/content/X_te')

"""##Evaluación

Para realizar la evaluación del modelo se exportaron los datos de las varialbes ann2, X_te y y_te, estos no se habían exportado en la primera entrega, pero para poder realizar el ejercicio eran necesarios y por tanto se realizó su exportación.
"""

pred_credit_te= ann2.predict(X_te)
pred_credit_te.shape

y_actual = np.array(y_te)
y_actual.shape

y_pred=np.array(pred_credit_te)[:,0]
y_pred.shape

metrics.PredictionErrorDisplay.from_predictions(y_true=y_actual, y_pred=y_pred, kind='actual_vs_predicted')
metrics.PredictionErrorDisplay.from_predictions(y_true=y_actual, y_pred=y_pred, kind='residual_vs_predicted')

error = y_actual - y_pred
error

np.mean(error)

"""Al observar el gráfico de residual vs predicho se ve un comportamiento hacia el cero, principalmente en los primeros datos, es decir que la diferencia entre lo predicho vs lo real es muy similar. Pero se observa un error amplio principalmente en el eje y negativo, esto quiere decir que los valores predichos están por encima de los valores reales. Al realizar el cálculo de la media de este error, nos da un valor de -113, es decir que se está sobrestimando en promedio por 113 unidades monetarias.

#Punto 2

Se realiza la carga de la base de datos
"""

url= "https://raw.githubusercontent.com/juancamiloespana/LEA2/master/_data/credit_card_clients2.csv"
credit_card2 = pd.read_csv(url)

credit_card2.isnull().sum()

"""Se observan igualmente 314 nulos como la base de datos credit_card, por lo tanto se procede a eliminarlos"""

credit_card2.head(5)

credit_card2= credit_card2.dropna()
credit_card2.isnull().sum()

"""La predicción se hará con otra base de datos que no tenga CUST_ID, luego se utilizará la base credit_card2 para saber cuales son esos clientes del top 10 que más compras realizan."""

credit_card3 = credit_card2.drop('CUST_ID', axis=1)

"""Se cargan los objetos para realizar las predicciones, esto se hace con el modelo ganador del entrenamiento anterior. Se cargan los datos del escalador y el modelo."""

######cargar escalador
sc=joblib.load('/content/salidas_escalador')
x_scal=sc.transform(credit_card3) ### el escalado de datos neuvos es con base en información de escalado de entrenamiento del modelo

### cargar modelo

modelo=keras.models.load_model('/content/salidas_modelo.h5')
modelo.summary()

pred_esp=np.argmax(modelo.predict(x_scal), axis=1)

#Se realiza la predicción de los valores
new_pred = modelo.predict(x_scal)

#Se rguardan los valores predichos en una nueva columna de la base de datos
credit_card2['Purchase_predict'] = new_pred

credit_card2

"""10 mayores compradores"""

# Obtener los 10 clientes con mayores compras esperadas
top_10_mayores = credit_card2.nlargest(10, 'Purchase_predict')[['CUST_ID', 'Purchase_predict']]
top_10_mayores

credit_card2['Purchase_predict'].max()

"""##Intervalos de confianza

Para calcular un intervalo de confianza del 80%, se procederá a utilizar el valor crítico de z que equivale a 1.28. Para ello se necesita la media y la desviación estandar de las proyecciones con la cual se hallará el error estandar. Finalmente se calcula el intervalo con la media y el valor de z multiplicado por el error.
"""

media_pred = np.mean(top_10_mayores['Purchase_predict'])
desv_est = np.std(top_10_mayores['Purchase_predict'])
error_estandar = desv_est / np.sqrt(10)

z = 1.28
int_inf = media_pred - z * error_estandar
int_sup = media_pred + z * error_estandar

intervalo = (int_inf, int_sup)
print(f'El intervalo con una confianza del 80% es {intervalo} y los 10 valores predichos tienen una media de {media_pred}')

"""#Punto 3

Se realiza una exploración de los datos para conocer a los que menos compras realizan
"""

credit_card2['Purchase_predict'].value_counts()

credit_card2.shape

credit_card2['Purchase_predict'].min()

2409/8636

credit_card2['Purchase_predict'].mean()

"""## Estrategías de fidelización

Para los clientes que realizan más compras con la tarjeta de crédito se recomiendan las siguientes estrategias para fidelizarlos:

 * Por compras superiores a 25 mil con las tarjetas de crédito se otorgará una oferta exclusiva para quienes alcancen la meta. Esto puede ser descuentos, cashback, entre otro.

 * A través de programas de fidelización donde se les de bonos o regalos (participar en viajes, sorteos para comer en restaurantes).

 *Incentivar al cliente que referencié a un familiar o conocido, se le dará un descuento del 20% por compras superiores a los 20 mil.

## Estrategías para activar a los clientes

Realizando un pequeño análisis en las predicciones realizadas se encontró que el 28% de los clientes utilizan la tc para compras de 33 unidades monetarias y este es el valor más bajo predecido. Por lo tanto, las estrategías que se recomendarán serán enfocadas principalmente en estas personas.

Estrategías:
* Informar al cliente (a través de diversos medios como redes sociales) sobre los beneficios que tiene el uso de su tarjeta de crédito, ya sea por compras frecuentes o de gran tamaño.

* Premiar es estos clientes por medio de bonos de descuentos en tiendas aliadas por compras acumuladas en el mes superiores a 300 unidades monetarias. Es decir que aumenten la utilización de la tc paulatinamente.

* Brindar asesorías gratuitas, sobre cómo se puede gestionar un uso saludable de la tarjeta de crédito, la diversidad de compras que se pueden hacer, las ventajas que trae, y sus recompensas.
"""